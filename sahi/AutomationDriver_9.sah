var $iTestCaseId = 0;
var $rs;  
var $rs1;
var $i;
var $ii;
var $page;
var $pg;
var $strAction
var $strParam1;
var $strControl;
var $strControlName;
var $strPopup;
var $iPositionNear;
var $strControlNear;
var $value;
var $strColumnName;
var $strMatchType;
var $iLength;
var $errorExists;
var $strUnderControlName;
var $iPositionUnder;
var $strControlUnder;
var $rowID = 0;
var $NextRowID;
var $strReturnMain;
var $blgVerStatus="success";
var $TcStatus=true;
var $PreStaus=true;
var $iSrNo;
var $isAssert;
var $StrStatus;
var $j=0;
var $rs2;
var $ipath;
var $ResultCom;
var $iRound;
var $ireadxml;
var $strExeFlag;
var $rs5;
var $ipath;
var $ipath1;
var $k=0;
var $TCondition="True";
var $value1;
var $value3;
var $j;
var $ExecutionMode;
var $rs2;
var $path1;
var $path2;
var $result="false";
var $Sflag;
var $strScreenShotFlag;
var $scrnshotFlag;
var $prevTCID;
var $iTestScenario;
var $rString;
var $rStringchar;
var $rStringnum;
var $randomresult;
var $prevrString;
var $prevrStringmail;
var $prevrStringchar;
var $prevrStringnum;
var $prevrStringchar;
var $prevrStringnum;
//*********************************************************************************************
// Please modify the path in following location
var db1=_getDB("sun.jdbc.odbc.JdbcOdbcDriver", "jdbc:odbc:Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};DBQ=D:\\sahi\\userdata\\scripts\\TAF_SAHI\\Test_Case_Files_Inventory.xls;readOnly=false", "", "");
$rs5 = db1.select("select * from [Sheet1$]"); 
_include("D:/sahi/userdata/scripts/TAF_SAHI/Custom_8.sah"); 

//*********************************************************************************************
//*******Reading Path From Excel Sheet
$path1=$rs5[0]["Path Of Folder where Baseline Table is write in Text File"];
$path2=$rs5[0]["Path Of Folder where Final Table is write in Text File"];

//*******************
//Error handling
function onScriptError()
{
    takeSnapShotFailure();	
	if($strPopup=="null")
	{
		
		_log("Test step :"+ $strAction + " from Test Case :" + $iTestCaseId + " & Test ITem : " + $strTestScenario + " failed due to some error. Executing next test case", "failure");
		
	}
	else
	{
		_popup($strPopup)._log("Test step :"+ $strAction + " from Test Case :" +$iTestCaseId + " & Test ITem : " + $strTestScenario + " failed due to some error. Executing next test case.", "failure");
		
	}
	
	funcNextTCExeOnException();
	
	
}
	
function onScriptFailure()
{
	
	takeSnapShotFailure();
	funcNextTCExeOnException();
	//funcTcExecutionDriver($iSrNo);
	
}

function funcrandomString(length, chars) {
    var $randomresult = '';
    for (var $i = length; $i > 0; --$i) $randomresult += chars[Math.round(Math.random() * (chars.length - 1))];
    return $randomresult;
}

function funcBuildingTimeStamp()
{
	var $TimeStamp; 
	var $strDate = new Date();
	$TimeStamp = $strDate.getDate()+ "/"+($strDate.getMonth()+1)+ "/" + $strDate.getFullYear()+" "+ $strDate.getHours() + ":" +($strDate.getMinutes()+1)+":" +$strDate.getSeconds();
	
	//_popup($strPopup)._alert($TimeStamp);
	return $TimeStamp;
}
function funcFindRoundId()
{
	var $iRoundId;
	var $CurRound;
	$iRoundId=$db.select("select MAX(Round) as MaxValue from [Results$]");	
		if ($iRoundId[0]["MaxValue"]!="null")
		{
			$CurRound=parseInt($iRoundId[0]["MaxValue"])+1;
		}
		else
		{
			$CurRound=1;
		}
	
	//_popup($strPopup)._alert($CurRound);
	return $CurRound;
}
function funcNextTCExeOnException()
{
	
	//Marking fail when strAction is Precondition 
	if($strAction=="precondition")
	{
		$PreStaus=false;
	}
		
	//Marking fail when strAction is Step in keywordlist
	if($strAction!="precondition" && $strAction.indexOf("assert")<0 )
	{
		$TcStatus=false;
		//funcUpdateStaus("FAIL","Data_File",$iSrNo,$iSrNo);
		funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",$iSrNo,$iSrNo);
		
	}
	//Marking fail when strAction is verification in keywordlist	
	if (parseInt($strAction.indexOf("assert"))>-1)	
	{
		//_alert("Assrtion Fail");
		$blgVerStatus="failure";
		if ($strPopup=="null")
		{
			_log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus , $blgVerStatus);
			//funcUpdateStaus("FAIL","Data_File",$iSrNo,$iSrNo);
			 funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",$iSrNo,$iSrNo);
		}
		if ($strPopup!="null")
		{
			_popup($strPopup)._log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
			//funcUpdateStaus("FAIL","Data_File",$iSrNo,$iSrNo);
			funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",$iSrNo,$iSrNo);
		}
	}
	
	if ($strAction=="precondition" && $strMatchType == "Exit")
	{
		//funcUpdateStaus("FAIL","Data_File",parseInt($iSrNo),parseInt($rs.length));
		funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",parseInt($iSrNo),parseInt($rs.length));
		funcTcExecutionDriver($rs.length);
	}
	else
	{
		if ($strAction=="precondition" && $strMatchType != "null" )
		{
			//funcUpdateStaus("FAIL","Data_File",parseInt($iSrNo),parseInt($strMatchType)-1);
			funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",parseInt($iSrNo),parseInt($strMatchType)-1);
			
			funcTcExecutionDriver(parseInt($strMatchType)-1);
		}
		else 
		{
			if($strAction=="precondition" && $strMatchType == "null")
			{
				
				//funcUpdateStaus("FAIL","Data_File",parseInt($iSrNo),parseInt($NextRowID));
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",parseInt($iSrNo),parseInt($NextRowID));
				funcTcExecutionDriver($NextRowID);
		    }
			if ($strAction!="precondition" && $strMatchType == "null" )
			{
				funcTcExecutionDriver($NextRowID);
			}
		}
		
	}
	
}

function funcUpdateResultStatus($strRounds,$iTestScenario,$iTCID,$strStatus,$iSeqStart,$iSeqEnd)
{
	var $strResultQuery;
	var $strTime;
	var $strTime=funcBuildingTimeStamp();
		while($iSeqStart <= $iSeqEnd)
		{
			$strResultQuery="insert into [Results$]  values ('"+ $strRounds +"','"+$iTestScenario+"','"+$iTCID+"','"+ $iSeqStart +"','"+ $strStatus +"','"+ $strTime +"')";
			$db.update($strResultQuery);	
			$iSeqStart=parseInt($iSeqStart)+1;
		}
}
function funcUpdatePreConStatus($strStaus,$iSeqStart)
	{
		var $strPreQuery;
		var $TimeStamp=funcBuildingTimeStamp();
		$strPreQuery="update [Preconditions$] set Status =" +"'"+$strStaus+"'"+", ExecutedOn="+"'"+$TimeStamp+"'" +" where StepNumber ="+$iSeqStart;
		$db.update($strPreQuery);
	}
function funcMakingExecutableStatement($iRowNumber,$strAction)
{	
	var $ExecStep;
	var $strPreMatchType;
	var $toStrS, $toStrE;
	if ($strAction=="precondition")
	{
		$rs2 = $db.select("select * from [Preconditions$]");	
	}
	else
	{
		$rs2 = $db.select("select * from [Data_File$]");	
	}
	$strAction = $rs2[$iRowNumber]["Action"];
	$strPreMatchType = $rs2[$iRowNumber]["MatchType"];
	$strPopup = $rs2[$iRowNumber]["ScreenName"];
	$strControl = $rs2[$iRowNumber]["ObjectType"];
	
	//Under related data read
	$iPositionUnder = $rs2[$iRowNumber]["Under_ObjectPosition"];
	$iPositionUnder = parseInt($iPositionUnder);
	$strControlUnder = $rs2[$iRowNumber]["Under_ObjectType"];
	$strUnderControlName = $rs2[$iRowNumber]["Under_ObjectName"];
	
	//near related data read
	$iPositionNear = $rs2[$iRowNumber]["Near_ObjectPosition"];
	$iPositionNear = parseInt($iPositionNear);
	$strControlNear = $rs2[$iRowNumber]["Near_ObjectType"];
	$strControlName = $rs2[$iRowNumber]["ObjectName"];
	
	//Value reading
	$strParam1 = $rs2[$iRowNumber]["DataValue"];
	if($strParam1=="randomstring")
	{
	   $strParam1="";
	   $prevrString="";
	   //$strPreMatchType = parseInt($strPreMatchType);
	   $rString = funcrandomString($iPositionNear, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
	   $strParam1=$rString;
	   $prevrString=$strParam1;
	}
	if($strParam1=="randomstringchar")
	{
	   $strParam1="";
	   $prevrStringchar="";
	  // $strPreMatchType = parseInt($strPreMatchType);
	   // _alert($strPreMatchType);
	   $rStringchar = funcrandomString($iPositionNear, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
	   $strParam1=$rStringchar;
	   $prevrStringchar=$strParam1;
	}
	if($strParam1=="randomstringnum")
	{
	   $strParam1="";
	   $prevrStringnum="";
	   // _alert($strPreMatchType);
		//$strPreMatchType = parseInt($strPreMatchType);
	   $rStringnum = funcrandomString($iPositionNear, '0123456789');
	   $strParam1=$rStringnum;
	   $prevrStringnum=$strParam1;
	}
	if($strParam1=="randomstringemail")
	{
	   $strParam1="";
	   $prevrStringmail="";
	  // _alert($strPreMatchType);
	  // $strPreMatchType = parseInt($strPreMatchType);
	   $rString = funcrandomString($iPositionNear, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
	   $strParam1=$rString+"@mailcatch.com";
	   $prevrStringmail=$strParam1;
	}
	
	
	if($strParam1=="previousstring")
	{
	   
	   $strParam1=$prevrString;
	   
	}
		if($strParam1=="previousstringchar")
	{
	   
	   $strParam1=$prevrStringchar;
	   
	}
		if($strParam1=="previousstringnum")
	{
	   
	   $strParam1=$prevrStringnum;
	   
	}
	if($strParam1=="previousstringemail")
	{
	   
	   $strParam1=$prevrStringmail;
	   
	}
	if($strControlName=="previousstring")
	{
	   
	   $strControlName=$prevrString;
	   
	}
		if($strControlName=="previousstringchar")
	{
	   
	   $strControlName=$prevrStringchar;
	   
	}
		if($strControlName=="previousstringnum")
	{
	   
	   $strControlName=$prevrStringnum;
	   
	}
	if($strControlName=="previousstringemail")
	{
	   
	   $strControlName=$prevrStringmail;
	   
	}
		
	if ($strAction.indexOf("_assert")>-1 && $strParam1 != "null")
	{
		$toStrS = "(String(";
		$toStrE = ")";
	}
	else
	{
		$toStrS = "(";
		$toStrE = "";
	}
	if ($strAction.indexOf("_wait")>-1 && $strParam1 != "null")
	{
		$ExecStep="_sahi."+"_"+$strAction+$toStrS+$strParam1+")";
		return $ExecStep;
	}

	//With near
	if ($strControlNear!="null"&$strControlUnder=="null")
	{
		$ExecStep="_sahi."+"_"+$strAction+$toStrS+"_sahi."+"_"+$strControl+"("+$iPositionNear+","+"_near("+"_sahi."+"_"+$strControlNear+"("+'"'+$strControlName+'"'+")"+")"+")";
	}
	//With under
	if ($strControlUnder!="null" & $strControlNear=="null")
	{
		$ExecStep="_sahi."+"_"+$strAction+$toStrS+"_sahi."+"_"+$strControl+"("+$iPositionUnder+","+"_under("+"_sahi."+"_"+$strControlUnder+"("+'"'+$strUnderControlName+'"'+")"+")"+")";	
	}
	//With near and under
	if ($strControlUnder!="null" & $strControlNear!="null")
	{
	
		$ExecStep="_sahi."+"_"+$strAction+$toStrS+"_sahi."+"_"+$strControl+"("+$iPositionNear+","+"_near("+"_sahi."+"_"+$strControlNear+"("+'"'+$strControlName+'"'+")"+")"+","+"_under("+"_"+$strControlUnder+"("+'"'+$strUnderControlName+'"'+")"+")"+")";
	}
	//With out near or under
	if ($strControlUnder=="null" & $strControlNear=="null" & $strControlName!="null")
	{
		$ExecStep="_sahi."+"_"+$strAction+$toStrS+"_sahi."+"_"+$strControl+"("+'"'+$strControlName+'"'+")";
	}
	
	
	if($strPreMatchType!="null" & $strAction!="setValue")
	{
		$ExecStep = $ExecStep + "." + $strPreMatchType ;
	}
	
	if($strPreMatchType!="null" & $strAction=="setValue")
	{
		var $itmp;
		var $tmp;
		$tmp="";
		for ($itmp=0;$itmp<$strMatchType;$itmp++)
		{
			
		$tmp = $tmp + String($strParam1);
			
		}
		$ExecStep = $ExecStep + $toStrE + ","+'"'+$tmp+'"'+")";
		
		return $ExecStep;
	}
	
	
	if($strParam1=="null")
	{
		$ExecStep = $ExecStep + ")";
	}
	else
	{
			if ($strControlUnder=="null" & $strControlNear=="null" & $strControlName=="null")
			{
				$ExecStep="_sahi."+"_"+$strAction+$toStrS+'"'+$strParam1+'"'+")";
			}
			else
			{
				
				if ($strParam1.indexOf("<")>-1) 
				{
					$ExecStep = $ExecStep + $toStrE + ","+'""'+")";
				}
				
				if ($strParam1.indexOf("<")<0) 
				{
					$ExecStep = $ExecStep + $toStrE + ","+'"'+$strParam1+'"'+")";
				}
			}
	}
	if($strAction=="assertContainsText")
	{
       $ExecStep="_sahi."+"_"+$strAction+"("+'"'+$strParam1+'"'+","+"_sahi."+"_"+$strControl+"("+'"'+$strControlName+'"'+")"+")";   	
	}
	if($strAction=="assertNotContainsText")
	{
       $ExecStep="_sahi."+"_"+$strAction+"("+'"'+$strParam1+'"'+","+"_sahi."+"_"+$strControl+"("+'"'+$strControlName+'"'+")"+")";   	
	}
	if($strAction=="assertEqual")
	{
       $ExecStep="_sahi."+"_"+$strAction+"("+'"'+$strParam1+'"'+","+"_sahi."+"_"+$strPreMatchType+"("+"("+"_sahi."+"_"+$strControl+"("+'"'+$strControlName+'"'+")"+")"+")"+")";   
	}
	if($strAction=="assert")
	{
       $ExecStep="_sahi."+"_"+$strAction+"("+"_sahi."+"_"+$strPreMatchType+"("+"_sahi."+"_"+$strControl+"("+'"'+$strControlName+'"'+")"+")"+")";    
	}
	if($strAction=="navigateTo")
	{
       $ExecStep="_sahi."+"_"+$strAction+"("+'"'+$strControlName+'"'+","+'"'+$strPreMatchType+'"'+")";  
	}
	if($strAction=="closeWindow")
	{
       $ExecStep="_sahi."+"_"+$strAction+"("+")";  
	}
	if($strAction=="selectWindow")
	{
       $ExecStep="_sahi."+"_"+$strAction+"("+")";  
	}
	return $ExecStep;
}

function funcMovingToNextTC($currPos,$tcid)
{
	while($rs[$currPos]["TestCaseId"] == "null" || String($rs[$currPos]["TestCaseId"]) == $tcid)
	{
		$currPos = $currPos+1;
		if ($currPos == $rs.length)
		{
			$currPos = $rs.length
			//funcTakingSnapShot($strPopup);
			break;
		}
	} 
	
	return $currPos
}
function funcPreConditonExecution($strprecon1)
{
	var $PreConStartPos = 0
	var $PreConEndPos
	var $strReturnPre;
	var $ExecStep;
	
	//Loop to get starting point	
	while($rs1[$PreConStartPos]["TestCaseId"]!=$strprecon1 )
	{
		$PreConStartPos = $PreConStartPos+1;
	}		
	//Loop to execute the precondition steps
	if ($PreConStartPos >= 0)
	{
		while($rs1[$PreConStartPos]["TestCaseId"]=="null" || $rs1[$PreConStartPos]["TestCaseId"]==$strprecon1)
		{
			$strPopup = $rs1[$PreConStartPos]["ScreenName"];
			$pSrNo = $rs1[$PreConStartPos]["StepNumber"]
			$pSrNo=parseInt($pSrNo);
			$strReturnPre=funcMakingExecutableStatement($PreConStartPos,"precondition");
					
			if ($strPopup=="null")
			{
				_eval($strReturnPre);
			}
			else
			{
				_popup($strPopup)._eval($strReturnPre);
			}
								
			if($PreStaus==true)
			{
						
				//funcUpdateStaus("EXECUTED","Preconditions",$pSrNo,$pSrNo);
				funcUpdatePreConStatus("EXECUTED",$pSrNo);
				if ($strScreenShotFlag=="Step Level")
				{
					//funcTakingSnapShot($strPopup);
				}
			}
			
			$PreConStartPos=parseInt($PreConStartPos)+1
			
			if ($PreConStartPos==$rs1.length || $PreStaus==false)
			{
				
				break;
			}
		}	
	}
}


//function funcTakingSnapShot($strPopupName,$strParam1Value)
function funcTakingSnapShot($strPopup)
{
    var $strParam1Value;
	if ($strPopup=="null")
	{
		_set($strParam1Value,_title());
	}
	else
	{
		_set($strParam1Value,_popup($strPopup)._title());
	}
	_execute("D:\\BrowserScrollTest.exe " + $strParam1Value ,true);
}
	

for($j=0;$j<$rs5.length;$j++)
{
      $rs=null;
      $rs1=null;
      $rs2=null;
      $rs3=null;      
	  $ipath=$rs5[$j]["Path For Files To Execute"];
	 
	  //CallExcel($ipath);
 

 // Get the DB instance
var $db;
$db=_getDB("sun.jdbc.odbc.JdbcOdbcDriver", "jdbc:odbc:Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};DBQ="+$ipath+";readOnly=false", "", "");																															   

// Run a select
$rs = $db.select("select * from [Data_File$]");
$rs1 = $db.select("select * from [Preconditions$]");
$rs2 = $db.select("select * from [ExecutionMode$]");
$ExecutionMode=$rs2[0]["Select Execution Mode"];


function funcTcExecutionDriver($rowID)
{	
	for ($i = $rowID; $i<$rs.length; $i++)
	{
		
		funcExecuteTestCases($i);
		
	}
}
function takeSnapShot(){
    try {
        var $folder = new java.io.File("D:/Screenshot/"+$iTestCaseId).mkdir();
		var robot = new java.awt.Robot();
        var toolkit = new java.awt.Toolkit.getDefaultToolkit();
        var screenSize = toolkit.getScreenSize();
        var screenRect = new java.awt.Rectangle(0, 0, screenSize.width, screenSize.height);
        var image = robot.createScreenCapture(screenRect);

        var file = new java.io.File("D:/Screenshot/"+$iTestCaseId+"/"+$iTestCaseId+$iSrNo+".png");
        javax.imageio.ImageIO.write(image, "png", file);
    } catch (e) {
        
    }
}
function takeSnapShotFailure(){
    try {
        var $folder = new java.io.File("D:/ScreenshotFailure/"+$iTestCaseId).mkdir();
		var robot = new java.awt.Robot();
        var toolkit = new java.awt.Toolkit.getDefaultToolkit();
        var screenSize = toolkit.getScreenSize();
        var screenRect = new java.awt.Rectangle(0, 0, screenSize.width, screenSize.height);
        var image = robot.createScreenCapture(screenRect);

        var file = new java.io.File("D:/ScreenshotFailure/"+$iTestCaseId+"/"+$iTestCaseId+$iSrNo+".png");
        javax.imageio.ImageIO.write(image, "png", file);
    } catch (e) {
        
    }
}

function funcExecuteTestCases($ii)
{
	if($rs[$ii]["TestScenario"]!="null")
	{
		$strTestScenario = $rs[$ii]["TestScenario"];
	}
	
	if($rs[$ii]["TestCaseId"]!="null")
	{
		$strScreenShotFlag=$rs[$ii]["ScreenShotFlag"];
		$iTestCaseId = $rs[$ii]["TestCaseId"];
		$strExeFlag=$rs[$ii]["ExecutionFlag"];
		if($ii!=0)
		{
		 //funcTakingSnapShot($strPopup);
		} 
		
	}
	$NextRowID=funcMovingToNextTC($ii,$iTestCaseId);
	$PreStaus=true;
	$blgVerStatus="success";
	$TcStatus=true;	
	$strAction = $rs[$ii]["Action"];
	$strPopup = $rs[$ii]["ScreenName"];
	$strParam1 = $rs[$ii]["DataValue"];
	$strControl = $rs[$ii]["ObjectType"];
	$strControlName = $rs[$ii]["ObjectName"];
	$strControlNear = $rs[$ii]["Near_ObjectType"];
	$iPositionNear = $rs[$ii]["Near_ObjectPosition"];
	$iSrNo=$rs[$ii]["StepNumber"];
	$iSrNo= parseInt($iSrNo);
	
	$iPositionUnder = $rs[$ii]["Under_ObjectPosition"];
	$strUnderControlType = $rs[$ii]["Under_ObjectType"];
	$strUnderControlName = $rs[$ii]["Under_ObjectName"];
	
	$strMatchType = "";
	$strMatchType = $rs[$ii]["MatchType"];
	if($strExeFlag=="Yes")
	{
		switch($strAction)
		{
			case "precondition":
			{
				
				funcPreConditonExecution($strParam1);
				takeSnapShot();
				break;
			}
			case "screenshot":
			{
				if($strMatchType=="On")
				{
						funcTakingSnapShot($strPopup);
				}
				break;
			}
			case "XMLread":
			{
			    XMLread();
				takeSnapShot();
			    break;
			}
			case "WriteRTE":
			{
			    funcWriteRTE();
				takeSnapShot();
			    break;
			}
			case "SuperAdminLogin":
			{
			    funcsuperadminlogin();
				takeSnapShot();
			    break;
			}
			case "navigate":
			{
			    navigate();
				takeSnapShot();
			    break;
			}
			case "navigateToUrl":
			{
			    navigateToUrl();
				takeSnapShot();
			    break;
			}
			case "CompareResults":
			{
			    funcCompareResults();
				takeSnapShot();
			    break;
			}
			case "UploadFile":
			{
			    funcFileUpload();
				takeSnapShot();
			    break;
			}
			case "verifytag":
			{
               
			    funcVerifyCreateTags();
				takeSnapShot();
			    break;
			}
			case "verify_table":
			{
			    funcToVerifyTable();
				takeSnapShot();
			    break;
			}
			case "Write":
			{
			    funcWrite();
				takeSnapShot();
			    break;
			}
			case "WriteTable":
			{
			    funcWriteTable();
				takeSnapShot();
			    break;
			}
			case "ClickAlert":
			{
				funClickAlert();
				takeSnapShot();
				break;
			}
			case "ClickOK":
			{
				funClickOK();
				takeSnapShot();
				break;
			}
			case "Alert":
			{
			    funAlert();
				takeSnapShot();
			    break;
			}
			case "wait":
			{
				funcwait();
				takeSnapShot();
				break;
			}
			case "verify_selected":
			{
			  funVerifySelected();
			  takeSnapShot();
			  break;
			}
			case "verify_enabled":
			{
			  funcVerifyEnabled();
			  takeSnapShot();
			  break;
			}
			case "FileDownload":
			{
			  funFileDownload();
			  takeSnapShot();
			  break;
			}
			case "setCapturedPassword":
			{
			  setCapturedPassword();
			  takeSnapShot();
			  break;
			}
			case "VerifyText":
			{
			 funVerifyText();
			 takeSnapShot();
			  break;
			}
			case "getTableContents":
			{
			  getTableContents($strParam1);
			  takeSnapShot();
			  break;
			}
			default:
			{
				
				$strReturnMain=funcMakingExecutableStatement($ii,$strAction)
					
					
					  if ($strPopup=="null")
						{
							_eval($strReturnMain);
							//_wait(5000);
						}
						else
						{
						  _popup($strPopup)._eval($strReturnMain);
						  //_popup($strPopup)._wait(5000);
						  
						}
						_wait(500);
						takeSnapShot();
					break;
			}
		}
		//Updating status in excel file for keywordlist sheet steps
		if($strAction !="precondition" && $strAction.indexOf("verify")<0 && $TcStatus==true && $strAction.indexOf("assert")<0)
		{
			//funcUpdateStaus("EXECUTED",$iSrNo,"Data_File")
			funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"Done",$iSrNo,$iSrNo);
				
		}
		
		//Verification case updating logs
		if($strAction.indexOf("assert")>-1 && $blgVerStatus!="failure")
		{
        
		if ($strPopup=="null")
			{
				_log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"PASS",$iSrNo,$iSrNo);
			}
			else	
			{
				_popup($strPopup)._log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"PASS",$iSrNo,$iSrNo);
			}
		}
		if($strAction.indexOf("verify")>-1 && $blgVerStatus!="failure")
		{
        
		if ($strPopup=="null")
			{
				_log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"PASS",$iSrNo,$iSrNo);
			}
			else	
			{
				_popup($strPopup)._log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"PASS",$iSrNo,$iSrNo);
			}
		}
		
		if($strAction.indexOf("verify")>-1 && $blgVerStatus=="failure")
		{
			
			if ($strPopup=="null")
			{
				_log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",$iSrNo,$iSrNo);
			}
			else	
			{
				_popup($strPopup)._log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",$iSrNo,$iSrNo);
			}
		}
		if($strAction.indexOf("assert")>-1 && $blgVerStatus=="failure")
		{
			
			if ($strPopup=="null")
			{
				_log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",$iSrNo,$iSrNo);
			}
			else	
			{
				_popup($strPopup)._log("Test Item :"+ $strTestScenario + ". Test Case ID :" + $iTestCaseId +". Execution status :" + $blgVerStatus, $blgVerStatus);
				funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"FAIL",$iSrNo,$iSrNo);
			}
		}
		
		//Updating status in excel file for keywordlist sheet steps
		if($PreStaus==true && $strAction =="precondition")
		{
			funcUpdateResultStatus($iRound,$strTestScenario,$iTestCaseId,"Done",$iSrNo,$iSrNo);
		}
	}
	else
	{
		funcTcExecutionDriver($NextRowID);	
	}

}

$iRound=funcFindRoundId();

$iRound=parseInt($iRound);

funcTcExecutionDriver($rowID);

$ireadxml=parseInt($ireadxml);

}